// Code generated by goa v3.13.2, DO NOT EDIT.
//
// calc HTTP client CLI support package
//
// Command:
// $ goa gen github.com/dragonator/goa-framework-service/design

package client

import (
	"encoding/json"
	"fmt"

	calc "github.com/dragonator/goa-framework-service/gen/calc"
)

// BuildMultiplyPayload builds the payload for the calc multiply endpoint from
// CLI flags.
func BuildMultiplyPayload(calcMultiplyBody string) (*calc.MultiplyPayload, error) {
	var err error
	var body MultiplyRequestBody
	{
		err = json.Unmarshal([]byte(calcMultiplyBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"a\": 546803495890724710,\n      \"b\": 7837387407375911615\n   }'")
		}
	}
	v := &calc.MultiplyPayload{
		A: body.A,
		B: body.B,
	}

	return v, nil
}
